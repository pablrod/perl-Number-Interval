Number::Interval - A representation of a numeric interval

This is release V0.07 of Number::Interval. This module can be used to
specify bound or unbound intervals (ie a max and a min value, a max
only or a min only) and then compare them with other intervals, find
out whether a number is within the interval and provide a stringified form
of the interval.

This is the first release so the interface should be considered
alpha state. Comments welcome.


INSTALLATION

 % perl Build.PL
 % ./Build
 % ./Build test
 % ./Build install

REQUIREMENTS

Requires perl 5.006 or newer.

Written completely in Perl. XS is not required.

Does not require any additional modules to run, although the tests
require Test::More.

AUTHORS

Tim Jenness <tjenness@cpan.org>
Brad Cavanagh <brad.cavanagh@gmail.com>

Copyright (C) 2002 - 2004 UK Particle Physics and Astronomy Research
Council. Copyright (C) 2009-2011 Science and Technology Facilities Council.
All Rights Reserved.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful,but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place,Suite 330, Boston, MA  02111-1307, USA
terms as Perl itself.

CHANGES IN THIS RELEASE

V0.07 * Update POD documentation of contains().
      * Change stringification of non-inclusive single-value
        intervals (which match nothing since V0.06).
      * Bug fixes for contains() and intersection().

V0.06 * Fix intersection() to respect inc_min and inc_max
        (Fixes RT #72281 (Gianluca Torta))
      * contains() fixed to recognize inc_min and inc_max
        when min==max.

V0.05 Many fixes since 0.01
      * Add sizeof() method
      * Use Module::Build
      * Add copy() method
      * Fix max==min case
      * Fix problems with intersections
      * Use interval notation
      * Add inclusive bounds
      * Add notequal() method

V0.01 First public release. Extracted from the JAC OMP code tree
      (see http://omp.jach.hawaii.edu)
